// Date: 14/07/2012 09:40:19
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package pixelmon.Trainers;

import net.minecraft.src.Entity;
import net.minecraft.src.ModelBase;
import net.minecraft.src.ModelRenderer;

public class ModelBugCatcher extends ModelBase
{
  //fields
    ModelRenderer Pole_;
    ModelRenderer Net;
    ModelRenderer Hat;
    ModelRenderer Top_Hat_Base;
    ModelRenderer Top_Hat;
    ModelRenderer Mouth_Left;
    ModelRenderer Mouth_Sraight;
    ModelRenderer body;
    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer Head;
    ModelRenderer Net_Holder;
    ModelRenderer head;
    ModelRenderer Net_holder_Front;
    ModelRenderer Net_holder_Back;
    ModelRenderer Net_Holder_L;
    ModelRenderer Net_Holder_R;
  
  public ModelBugCatcher()
  {
    textureWidth = 64;
    textureHeight = 32;
    setTextureOffset("Net_Holder.Net_Holder_", 0, 0);
    
      Pole_ = new ModelRenderer(this, 0, 12);
      Pole_.addBox(-9F, 0F, 0F, 18, 1, 1);
      Pole_.setRotationPoint(-1F, 9F, 1F);
      Pole_.setTextureSize(64, 32);
      Pole_.mirror = true;
      setRotation(Pole_, 0.1487144F, 0.0279803F, -0.8179294F);
      Net = new ModelRenderer(this, 44, 0);
      Net.addBox(0F, 0F, 0F, 5, 3, 5);
      Net.setRotationPoint(6F, 3F, -1F);
      Net.setTextureSize(64, 32);
      Net.mirror = true;
      setRotation(Net, 0F, 0F, 0F);
      Hat = new ModelRenderer(this, 33, 8);
      Hat.addBox(-4F, 0F, -4F, 7, 0, 7);
      Hat.setRotationPoint(0F, 0F, 0F);
      Hat.setTextureSize(64, 32);
      Hat.mirror = true;
      setRotation(Hat, 0F, 0F, 0F);
      Top_Hat_Base = new ModelRenderer(this, 44, 25);
      Top_Hat_Base.addBox(-2F, 0F, -2F, 5, 2, 5);
      Top_Hat_Base.setRotationPoint(-1F, -2F, -1F);
      Top_Hat_Base.setTextureSize(64, 32);
      Top_Hat_Base.mirror = true;
      setRotation(Top_Hat_Base, 0F, 0F, 0F);
      Top_Hat = new ModelRenderer(this, 52, 18);
      Top_Hat.addBox(-2F, 0F, -2F, 3, 1, 3);
      Top_Hat.setRotationPoint(0F, -3F, 0F);
      Top_Hat.setTextureSize(64, 32);
      Top_Hat.mirror = true;
      setRotation(Top_Hat, 0F, 0F, 0F);
      Mouth_Left = new ModelRenderer(this, 28, 2);
      Mouth_Left.addBox(1F, 2F, 0F, 2, 1, 0);
      Mouth_Left.setRotationPoint(-2F, 2F, -3F);
      Mouth_Left.setTextureSize(64, 32);
      Mouth_Left.mirror = true;
      setRotation(Mouth_Left, 0F, 0.0743572F, -0.1010546F);
      Mouth_Sraight = new ModelRenderer(this, 28, 2);
      Mouth_Sraight.addBox(0F, 0F, 0F, 2, 1, 0);
      Mouth_Sraight.setRotationPoint(-2F, 4F, -3F);
      Mouth_Sraight.setTextureSize(64, 32);
      Mouth_Sraight.mirror = true;
      setRotation(Mouth_Sraight, 0F, 0F, 0F);
      body = new ModelRenderer(this, 16, 16);
      body.addBox(-4F, 0F, -2F, 7, 9, 3);
      body.setRotationPoint(0F, 5F, 0F);
      body.setTextureSize(64, 32);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rightarm = new ModelRenderer(this, 40, 16);
      rightarm.addBox(-2F, -2F, -1F, 2, 10, 2);
      rightarm.setRotationPoint(-4F, 7F, -0.5F);
      rightarm.setTextureSize(64, 32);
      rightarm.mirror = true;
      setRotation(rightarm, 0F, 0F, 0.074351F);
      leftarm = new ModelRenderer(this, 40, 16);
      leftarm.addBox(0F, -2F, -1F, 2, 10, 2);
      leftarm.setRotationPoint(3F, 7F, -1F);
      leftarm.setTextureSize(64, 32);
      leftarm.mirror = true;
      setRotation(leftarm, 0F, 0F, -0.0743572F);
      rightleg = new ModelRenderer(this, 0, 16);
      rightleg.addBox(-2F, 0F, -2F, 3, 10, 3);
      rightleg.setRotationPoint(-2F, 14F, 0F);
      rightleg.setTextureSize(64, 32);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 0, 16);
      leftleg.addBox(-2F, 0F, -2F, 3, 10, 3);
      leftleg.setRotationPoint(2F, 14F, 0F);
      leftleg.setTextureSize(64, 32);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
    Head = new ModelRenderer(this, "Head");
    Head.setRotationPoint(-0.5F, 5F, 0F);
    setRotation(Head, 0F, 0F, 0F);
    Head.mirror = true;
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-2.5F, -5F, -3F, 5, 5, 5);
      head.setRotationPoint(0F, 0F, 0F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
    Net_Holder = new ModelRenderer(this, "Net_Holder");
    Net_Holder.setRotationPoint(0F, 0F, 0F);
    setRotation(Net_Holder, 0F, 0F, 0F);
    Net_Holder.mirror = true;
      Net_holder_Front = new ModelRenderer(this, 0, 12);
      Net_holder_Front.addBox(-3F, 0F, 0F, 7, 1, 1);
      Net_holder_Front.setRotationPoint(6F, 2F, 1F);
      Net_holder_Front.setTextureSize(64, 32);
      Net_holder_Front.mirror = true;
      setRotation(Net_holder_Front, 0F, -1.524323F, 0F);
      Net_Holder_L = new ModelRenderer(this, 0, 12);
      Net_Holder_L.addBox(0F, 0F, 0F, 5, 1, 1);
      Net_Holder_L.setRotationPoint(5F, 2F, -2F);
      Net_Holder_L.setTextureSize(64, 32);
      Net_Holder_L.mirror = true;
      setRotation(Net_Holder_L, 0F, 0F, 0F);
      Net_holder_Back = new ModelRenderer(this, 0, 12);
      Net_holder_Back.addBox(0F, 0F, 0F, 7, 1, 1);
      Net_holder_Back.setRotationPoint(11F, 2F, -2F);
      Net_holder_Back.setTextureSize(64, 32);
      Net_holder_Back.mirror = true;
      setRotation(Net_holder_Back, 0F, -1.524323F, 0F);
      Net_Holder_R = new ModelRenderer(this, 0, 12);
      Net_Holder_R.addBox(0F, 0F, 0F, 5, 1, 1);
      Net_Holder_R.setRotationPoint(6F, 2F, 4F);
      Net_Holder_R.setTextureSize(64, 32);
      Net_Holder_R.mirror = true;
      setRotation(Net_Holder_R, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Pole_.render(f5);
    Net.render(f5);
    Hat.render(f5);
    Top_Hat_Base.render(f5);
    Top_Hat.render(f5);
    Mouth_Left.render(f5);
    Mouth_Sraight.render(f5);
    body.render(f5);
    rightarm.render(f5);
    leftarm.render(f5);
    rightleg.render(f5);
    leftleg.render(f5);
    Head.render(f5);
    Net_Holder.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5);
  }

}
